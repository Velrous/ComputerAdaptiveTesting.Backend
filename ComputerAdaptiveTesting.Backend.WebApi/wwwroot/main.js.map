{"version":3,"sources":["./src/app/auth/models/auth-info.model.ts","./src/app/test/models/answer.model.ts","./src/app/auth/models/register.model.ts","./src/environments/environment.ts","./src/app/auth/log-in/log-in.component.html","./src/app/auth/log-in/log-in.component.ts","./src/app/test/models/test.model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/test/createTest/createTest.component.ts","./src/app/test/createTest/createTest.component.html","./src/app/app.module.ts","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/test/test.service.ts","./src/app/test/pass-test/pass-test.component.html","./src/app/test/pass-test/pass-test.component.ts","./src/app/auth/auth.service.ts","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/test/models/question.model.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class AuthInfoModel {\r\n    public Id: number;\r\n    public Name: string;\r\n    public RoleId: number;\r\n    public RoleName: string;\r\n    public Token?: string;\r\n    public IsActive: boolean;\r\n\r\n    constructor (\r\n        id: number,\r\n        name: string,\r\n        roleId: number,\r\n        roleName: string,\r\n        token: string,\r\n        isActive: boolean\r\n    ) {\r\n        this.Id = id;\r\n        this.Name = name;\r\n        this.RoleId = roleId;\r\n        this.RoleName = roleName;\r\n        this.Token = token;\r\n        this.IsActive = isActive;\r\n    }\r\n}","export class Answer {\r\n    Id: number;\r\n    Name: string;\r\n    IsRight: boolean;\r\n\r\n    constructor (\r\n        id: number,\r\n        name: string,\r\n        isRight: boolean\r\n    ) {\r\n        this.Id = id;\r\n        this.Name = name;\r\n        this.IsRight = isRight;\r\n    }\r\n}","export class RegisterModel {\r\n    public Id: number;\r\n    public Login: string;\r\n    public Password: string;\r\n    public Name: string;\r\n    public RoleId: number;\r\n    public IsActive: boolean;\r\n    public Email: string;\r\n\r\n    constructor (\r\n        id: number,\r\n        login: string,\r\n        password: string,\r\n        name: string,\r\n        roleId: number,\r\n        isActive: boolean,\r\n        email: string\r\n    ) {\r\n        this.Id = id;\r\n        this.Login = login;\r\n        this.Password = password;\r\n        this.Name = name;\r\n        this.RoleId = roleId;\r\n        this.IsActive = isActive;\r\n        this.Email = email;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n\r\n    <mat-card class=\"box\">\r\n      <mat-card-header>\r\n        <mat-card-title>Вход</mat-card-title>\r\n      </mat-card-header>\r\n  \r\n      <form class=\"example-form\">\r\n        <mat-card-content>\r\n          <mat-form-field class=\"example-full-width\">\r\n            <input matInput [(ngModel)]=\"info.login\" name=\"login\" placeholder=\"Имя пользователя\">\r\n          </mat-form-field>\r\n  \r\n          <mat-form-field class=\"example-full-width\">\r\n            <input matInput [(ngModel)]=\"info.password\" name=\"password\" type=\"password\" placeholder=\"Пароль\">\r\n          </mat-form-field>\r\n        </mat-card-content>\r\n        <div class=\"login-Error\"\r\n        *ngIf=\"hasError\">\r\n        Неверное имя пользователя или пароль\r\n      </div>\r\n        <button mat-stroked-button color=\"accent\" class=\"btn-block\" (click)=\"logIn();\">Войти</button>\r\n      </form>\r\n    </mat-card>\r\n  \r\n  </div>","import { Component, OnInit, Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-log-in',\r\n  templateUrl: './log-in.component.html',\r\n  styleUrls: ['./log-in.component.css']\r\n})\r\nexport class LogInComponent implements OnInit {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  isLoading = false;\r\n  hasError = false;\r\n  info = {\r\n    login: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  async logIn() {\r\n    this.isLoading = true;\r\n    let authInfo = null;\r\n    try {\r\n      authInfo = await this.authService.logIn(this.info.login, this.info.password);\r\n      this.isLoading = false;\r\n    }\r\n    catch (e) {\r\n      console.error(e);\r\n      this.hasError = true;\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if(authInfo) {\r\n        if(this.authService.redirectUrl) {\r\n          this.router.navigate([this.authService.redirectUrl]);\r\n        } else {\r\n          this.router.navigate(['./home']);\r\n        }\r\n      }\r\n    }, 10);\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(this.authService.isLoggedIn)\r\n    if(this.authService.isLoggedIn) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n}\r\n","import { Question } from \"./question.model\";\r\n\r\nexport class Test {\r\n    Id: number;\r\n    Name: string;\r\n    Questions: Question[];\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'cat-front';\r\n}\r\n","<!-- Toolbar -->\r\n<mat-toolbar color=\"primary\" class=\"app-header\">\r\n  <div><p>ComputerAdaptiveTesting</p></div>\r\n  <span class=\"nav-tool-items\">\r\n    <a mat-button routerLink=\"login\" routerLinkActive=\"active\">Войти</a>\r\n    <a mat-button mat-raised-button routerLink=\"register\" routerLinkActive=\"active\">Регистрация</a>\r\n  </span>\r\n</mat-toolbar>\r\n\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Answer } from '../models/answer.model';\r\nimport { Question } from '../models/question.model';\r\nimport { Test } from '../models/test.model';\r\nimport { TestService } from '../test.service';\r\n\r\n@Component({\r\n  selector: 'app-createTest',\r\n  templateUrl: './createTest.component.html',\r\n  styleUrls: ['./createTest.component.css']\r\n})\r\nexport class CreateTestComponent implements OnInit {\r\n\r\n  constructor(\r\n    private testService: TestService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  isCreateTest = true;\r\n  isCreateQuestionsAndAnswers = false;\r\n  index = 0;\r\n  createdQuestionCount = 0;\r\n  test: Test = new Test;\r\n  questions: Question[] = [];\r\n  answers: Answer[] = [];\r\n  testModel = {\r\n    name: \"\",\r\n    questionCount: 0,\r\n  }\r\n  questionModel = {\r\n    questionName: \"\"\r\n  }\r\n  answersModel = {\r\n    name1: \"\",\r\n    isRight1: false,\r\n    name2: \"\",\r\n    isRight2: false,\r\n    name3: \"\",\r\n    isRight3: false,\r\n    name4: \"\",\r\n    isRight4: false,\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  createTest() {\r\n    console.log(\"createTest length\", this.questions.length);\r\n    if(this.questions.length == 0)\r\n    {\r\n      this.test.Name = this.testModel.name;\r\n      this.isCreateTest = false;\r\n      this.isCreateQuestionsAndAnswers = true;\r\n      console.log(\"createTest\", this.test)\r\n    }\r\n    else\r\n    {\r\n      let question = new Question();\r\n      question.Name = this.questionModel.questionName;\r\n      this.answers.push(new Answer(null, this.answersModel.name1, this.answersModel.isRight1));\r\n      this.answers.push(new Answer(null, this.answersModel.name2, this.answersModel.isRight2));\r\n      this.answers.push(new Answer(null, this.answersModel.name3, this.answersModel.isRight3));\r\n      this.answers.push(new Answer(null, this.answersModel.name4, this.answersModel.isRight4));\r\n      question.Answers = this.answers;\r\n      this.questions.push(question);\r\n      console.log(\"createTest\", this.questions);\r\n      this.test.Questions = this.questions;\r\n      this.testService.createTest(this.test);\r\n      this.router.navigate(['./home']);\r\n    }\r\n  }\r\n\r\n  nextQuestion() {\r\n    console.log(\"nextQuestionStart1\", this.index);\r\n    console.log(\"nextQuestionStart2\", this.questions.length);\r\n    if(this.index+1-this.questions.length == 1)\r\n    {\r\n      let question = new Question();\r\n      question.Name = this.questionModel.questionName;\r\n      this.answers.push(new Answer(null, this.answersModel.name1, this.answersModel.isRight1));\r\n      this.answers.push(new Answer(null, this.answersModel.name2, this.answersModel.isRight2));\r\n      this.answers.push(new Answer(null, this.answersModel.name3, this.answersModel.isRight3));\r\n      this.answers.push(new Answer(null, this.answersModel.name4, this.answersModel.isRight4));\r\n      question.Answers = this.answers;\r\n      console.log(\"5\", question);\r\n      this.questions.push(question);\r\n      console.log(\"nextQuestion\", this.questions);\r\n      this.createdQuestionCount++;\r\n      if(this.index + 1 < this.testModel.questionCount)\r\n      {\r\n        this.index++;\r\n        this.questionModel.questionName = \"\";\r\n        this.answersModel.name1 = \"\";\r\n        this.answersModel.name2 = \"\";\r\n        this.answersModel.name3 = \"\";\r\n        this.answersModel.name4 = \"\";\r\n        this.answersModel.isRight1 = false;\r\n        this.answersModel.isRight2 = false;\r\n        this.answersModel.isRight3 = false;\r\n        this.answersModel.isRight4 = false;\r\n        this.answers = [];\r\n      }\r\n    }\r\n    else \r\n    {\r\n      if(this.index+1 < this.questions.length)\r\n      {\r\n        this.index++;\r\n        let nextQuestion = new Question;\r\n        nextQuestion = this.questions[this.index];\r\n        this.questionModel.questionName = nextQuestion.Name;\r\n        this.answersModel.name1 = nextQuestion.Answers[0].Name;\r\n        this.answersModel.name2 = nextQuestion.Answers[1].Name;\r\n        this.answersModel.name3 = nextQuestion.Answers[2].Name;\r\n        this.answersModel.name4 = nextQuestion.Answers[3].Name;\r\n        this.answersModel.isRight1 = nextQuestion.Answers[0].IsRight;\r\n        this.answersModel.isRight2 = nextQuestion.Answers[1].IsRight;\r\n        this.answersModel.isRight3 = nextQuestion.Answers[2].IsRight;\r\n        this.answersModel.isRight4 = nextQuestion.Answers[3].IsRight;\r\n      }\r\n      else\r\n      {\r\n        this.index++;\r\n        this.questionModel.questionName = \"\";\r\n        this.answersModel.name1 = \"\";\r\n        this.answersModel.name2 = \"\";\r\n        this.answersModel.name3 = \"\";\r\n        this.answersModel.name4 = \"\";\r\n        this.answersModel.isRight1 = false;\r\n        this.answersModel.isRight2 = false;\r\n        this.answersModel.isRight3 = false;\r\n        this.answersModel.isRight4 = false;\r\n        this.answers = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  previousQuestion() {\r\n    if(this.index - 1 >= 0)\r\n    {\r\n      this.index--;\r\n      let previousQuestion = new Question;\r\n      previousQuestion = this.questions[this.index];\r\n      this.questionModel.questionName = previousQuestion.Name;\r\n      this.answersModel.name1 = previousQuestion.Answers[0].Name;\r\n      this.answersModel.name2 = previousQuestion.Answers[1].Name;\r\n      this.answersModel.name3 = previousQuestion.Answers[2].Name;\r\n      this.answersModel.name4 = previousQuestion.Answers[3].Name;\r\n      this.answersModel.isRight1 = previousQuestion.Answers[0].IsRight;\r\n      this.answersModel.isRight2 = previousQuestion.Answers[1].IsRight;\r\n      this.answersModel.isRight3 = previousQuestion.Answers[2].IsRight;\r\n      this.answersModel.isRight4 = previousQuestion.Answers[3].IsRight;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\" style=\"height:64px\"></div>\r\n    <div class=\"row\">\r\n        <div class=\"col\"></div>\r\n        <div class=\"col-md-10\">\r\n            <mat-card class=\"box\">\r\n              <div *ngIf=\"isCreateTest\">\r\n                  <mat-card-header>\r\n                    <mat-card-title>Создание теста</mat-card-title>\r\n                  </mat-card-header>\r\n                  <mat-card-content>\r\n                    <mat-form-field class=\"form-group\">\r\n                      <input type=\"text\" name=\"testName\" matInput placeholder=\"Введите название теста\" \r\n                       [(ngModel)]=\"testModel.name\" #testName=\"ngModel\">\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"form-group\">\r\n                      <input type=\"text\" name=\"questionCount\" matInput placeholder=\"Введите количество вопросов\" \r\n                       [(ngModel)]=\"testModel.questionCount\" #questionCount=\"ngModel\">\r\n                    </mat-form-field>\r\n                  </mat-card-content>\r\n                  <button mat-stroked-button color=\"accent\" class=\"btn-block\" (click)=\"createTest();\">Создать тест</button>\r\n              </div>\r\n              <div *ngIf=\"isCreateQuestionsAndAnswers\">\r\n                <mat-card-header>\r\n                  <mat-card-title>Создание вопроса</mat-card-title>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                  <mat-form-field class=\"form-group\">\r\n                    <input type=\"text\" name=\"questionName\" matInput placeholder=\"Введите вопрос\" \r\n                     [(ngModel)]=\"questionModel.questionName\" #questionName=\"ngModel\">\r\n                  </mat-form-field>\r\n                  <mat-form-field class=\"form-group\">\r\n                    <input type=\"text\" name=\"firstAnswer\" matInput placeholder=\"Введите 1 ответ\" \r\n                     [(ngModel)]=\"answersModel.name1\" #firstAnswer=\"ngModel\">\r\n                     <mat-checkbox class=\"example-margin\" [(ngModel)]=\"answersModel.isRight1\">Верный ответ?</mat-checkbox>\r\n                  </mat-form-field>\r\n                  <mat-form-field class=\"form-group\">\r\n                    <input type=\"text\" name=\"secondAnswer\" matInput placeholder=\"Введите 2 ответ\" \r\n                     [(ngModel)]=\"answersModel.name2\" #secondAnswer=\"ngModel\">\r\n                     <mat-checkbox class=\"example-margin\" [(ngModel)]=\"answersModel.isRight2\">Верный ответ?</mat-checkbox>\r\n                  </mat-form-field>\r\n                  <mat-form-field class=\"form-group\">\r\n                    <input type=\"text\" name=\"thirdAnswer\" matInput placeholder=\"Введите 3 ответ\" \r\n                     [(ngModel)]=\"answersModel.name3\" #thirdAnswer=\"ngModel\">\r\n                     <mat-checkbox class=\"example-margin\" [(ngModel)]=\"answersModel.isRight3\">Верный ответ?</mat-checkbox>\r\n                  </mat-form-field>\r\n                  <mat-form-field class=\"form-group\">\r\n                    <input type=\"text\" name=\"fourthAnswer\" matInput placeholder=\"Введите 4 ответ\" \r\n                     [(ngModel)]=\"answersModel.name4\" #fourthAnswer=\"ngModel\">\r\n                     <mat-checkbox class=\"example-margin\" [(ngModel)]=\"answersModel.isRight4\">Верный ответ?</mat-checkbox>\r\n                  </mat-form-field>\r\n                </mat-card-content>\r\n                <button mat-stroked-button color=\"accent\" *ngIf=\"index>0\" class=\"btn-block\" (click)=\"previousQuestion();\">Назад</button>\r\n                <button mat-stroked-button color=\"accent\" *ngIf=\"index+1<testModel.questionCount\" class=\"btn-block\" (click)=\"nextQuestion();\">Далее</button>\r\n                <button mat-stroked-button color=\"accent\" *ngIf=\"index+1==testModel.questionCount\" class=\"btn-block\" (click)=\"createTest();\">Создать тест</button>\r\n              </div>\r\n            </mat-card>\r\n        </div>\r\n        <div class=\"col\"></div>\r\n    </div>\r\n</div>\r\n\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LogInComponent } from './auth/log-in/log-in.component';\r\nimport { RegisterComponent } from './auth/register/register.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AngularMaterialModule } from './angular-material.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CreateTestComponent } from './test/createTest/createTest.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { PassTestComponent } from './test/pass-test/pass-test.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LogInComponent,\r\n    RegisterComponent,\r\n    CreateTestComponent,\r\n    MainComponent,\r\n    PassTestComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    AngularMaterialModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Role } from 'src/app/test/models/role.model';\r\nimport { AuthService } from '../auth.service';\r\nimport { RegisterModel } from '../models/register.model';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  roles: Role[];\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { \r\n    this.authService.getRolesForRegistration().subscribe((roles) => {\r\n      this.roles = roles.map(item => {\r\n        return {Id: item.Id, Name: item.Name};\r\n      });\r\n    });\r\n    console.log(\"roles\", this.roles);\r\n  }\r\n\r\n  isLoading = false;\r\n  hasError = false;\r\n  registerForm = null;\r\n  registrationModel = {\r\n    login: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    roleId: null\r\n  };\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  register() {\r\n    if(this.registrationModel.password == this.registrationModel.confirmPassword)\r\n    {\r\n      let registerModel = new RegisterModel(\r\n        null,\r\n        this.registrationModel.login,\r\n        this.registrationModel.password,\r\n        null,\r\n        this.registrationModel.roleId,\r\n        true,\r\n        this.registrationModel.email\r\n      );\r\n      console.log(\"Register\", registerModel);\r\n      this.authService.register(registerModel);\r\n    }\r\n  }\r\n}\r\n","<div class=\"row w-100\" style=\"height:64px\"></div>\r\n<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n  <div class=\"col-4\"></div>\r\n  <div class=\"col-4\">\r\n    <mat-card class=\"container-fluid\">\r\n      <mat-card-header>\r\n        <mat-card-title>Регистрация</mat-card-title>\r\n      </mat-card-header>\r\n  \r\n      <form>\r\n  \r\n        <mat-card-content>\r\n          <mat-form-field class=\"w-100 form-group\">\r\n            <input class=\"h-100\" type=\"text\" name=\"login\" matInput required minlength=\"5\" placeholder=\"Имя пользователя\" \r\n             [(ngModel)]=\"registrationModel.login\" #login=\"ngModel\">\r\n          </mat-form-field>\r\n          <div class=\"alert alert-danger\" *ngIf=\"login.invalid && (login.dirty || login.touched)\">\r\n              <div *ngIf=\"login.errors?.required\">\r\n                Имя пользователя не введено\r\n              </div>\r\n              <div *ngIf=\"login.errors?.minlength\">\r\n                Имя пользователя должно быть не короче 5 символов\r\n              </div>\r\n          </div>\r\n  \r\n          <mat-form-field class=\"w-100\">\r\n            <input class=\"h-100\" type=\"email\" name=\"email\" matInput required placeholder=\"Email\" [(ngModel)]=\"registrationModel.email\" #email=\"ngModel\" ngModel email=\"true\">\r\n          </mat-form-field>\r\n          <div class=\"alert alert-danger\" *ngIf=\"email.invalid && (email.dirty || email.touched)\">\r\n            <div *ngIf=\"email.errors?.required\">\r\n              Email не введен\r\n            </div>\r\n            <div *ngIf=\"email.invalid\">\r\n              Email не корректен\r\n            </div>\r\n          </div>\r\n\r\n          <mat-form-field class=\"w-100\">\r\n            <mat-label>Выберите роль...</mat-label>\r\n            <mat-select name=\"roleId\" [(ngModel)]=\"registrationModel.roleId\" #roleId=\"ngModel\" required>\r\n              <mat-option [value]=\"role.Id\" *ngFor=\"let role of roles\">{{role.Name}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <div class=\"alert alert-danger\" *ngIf=\"roleId.invalid && (roleId.dirty || roleId.touched)\">\r\n            Роль не выбрана\r\n          </div>\r\n  \r\n          <mat-form-field class=\"w-100\">\r\n            <input class=\"h-100\" type=\"password\" name=\"password\" matInput required placeholder=\"Пароль\" [(ngModel)]=\"registrationModel.password\" #password=\"ngModel\" ngModel password=\"true\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-100\">\r\n            <input class=\"h-100\" type=\"password\" name=\"confirmPassword\" matInput required placeholder=\"Подтверждение пароля\" [(ngModel)]=\"registrationModel.confirmPassword\" #confirmPassword=\"ngModel\" ngModel confirmPassword=\"true\">\r\n          </mat-form-field>\r\n  \r\n        </mat-card-content>\r\n  \r\n        <button mat-stroked-button color=\"accent\" class=\"btn-block\" (click)=\"register();\">Зарегистрироваться</button>\r\n  \r\n      </form>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"col-4\"></div>\r\n</div>\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Test } from \"./models/test.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestService { \r\n\r\n    public token = '';\r\n    private localToken = '';\r\n\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    async createTest(newTest: Test): Promise<void> {\r\n        console.log(\"createTest\");\r\n        const headers = {\r\n            Authorization: 'Bearer ' + this.getToken()\r\n        }\r\n        console.log(\"headers\", headers);\r\n        const request = await this.http.post<void>(\"/api/Tests/Create\", newTest, {headers: headers}).toPromise();\r\n        console.log(\"Test request\", request);\r\n        return request;\r\n    }\r\n\r\n    getTests(): Observable<Test[]> {\r\n      console.log(\"getTests\");\r\n      const headers = {\r\n          Authorization: 'Bearer ' + this.getToken()\r\n      }\r\n      console.log(\"headers\", headers);\r\n      const request = this.http.get<Test[]>('/api/Tests', {headers: headers});\r\n      console.log(\"Tests\", request);\r\n      return request;\r\n  }\r\n\r\n    private getToken(): string {\r\n        this.localToken = localStorage.getItem('Token') || sessionStorage.getItem('Token');\r\n        if(this.localToken)\r\n        {\r\n          if(this.token != this.localToken)\r\n          {\r\n           this.token = this.localToken;\r\n          }\r\n        }\r\n        return this.token;\r\n      }\r\n}","<div class=\"container\">\n    <div class=\"row\" style=\"height:64px\"></div>\n    <div class=\"row\">\n        <div class=\"col\"></div>\n        <div class=\"col-md-10\">\n            <div> \n                <table mat-table [dataSource]=\"tests\" class=\"mat-elevation-z8\">\n                  \n                    <!-- Name Column -->\n                    <ng-container matColumnDef=\"name\">\n                      <th mat-header-cell *matHeaderCellDef> Наименование </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Name}} </td>\n                    </ng-container>\n                  \n                    <!-- Action Column -->\n                    <ng-container matColumnDef=\"action\">\n                      <th mat-header-cell *matHeaderCellDef> Действие </th>\n                      <mat-cell *matCellDef=\"let row\" >\n                        <button mat-button (click)=\"openTest(row)\">Открыть</button>\n                      </mat-cell>\n                    </ng-container>\n                  \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                </table>\n            </div>\n        </div>\n        <div class=\"col\"></div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Test } from '../models/test.model';\nimport { TestService } from '../test.service';\n\n@Component({\n  selector: 'app-pass-test',\n  templateUrl: './pass-test.component.html',\n  styleUrls: ['./pass-test.component.css']\n})\nexport class PassTestComponent implements OnInit {\n\n  constructor(\n    private testService: TestService\n  ) { }\n\n  displayedColumns: string[] = ['name', 'action'];\n  tests: Test[] = [];\n\n  ngOnInit(): void {\n    this.getTests();\n    console.log(\"getTests\", this.tests);\n  }\n\n  getTests() {\n    this.testService.getTests().subscribe((response) => this.tests = response);\n  }\n\n  openTest(row) {\n    console.log(\"openTest\", row);\n  }\n\n}\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { EventEmitter, Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Role } from \"../test/models/role.model\";\r\nimport { AuthInfoModel } from \"./models/auth-info.model\";\r\nimport { RegisterModel } from \"./models/register.model\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class AuthService { \r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    public AuthStatusChanged = new EventEmitter<AuthInfoModel>();\r\n    private _isLoggedIn = false;\r\n    private _AuthInfo: AuthInfoModel;\r\n\r\n    get isLoggedIn(): boolean {\r\n        return this._isLoggedIn;\r\n    }\r\n\r\n    get AuthInfo() {\r\n        return this._AuthInfo;\r\n    }\r\n\r\n    authToken?: string = '';\r\n    redirectUrl: string = '';\r\n\r\n    getAuthToken() {\r\n        return this.authToken || null;\r\n    }\r\n\r\n    async logIn(login: string, password: string): Promise<AuthInfoModel> {\r\n        let authInfo: AuthInfoModel = null;\r\n\r\n        const authRequest = await this.http.post<any>(\"/api/Auth/Login\", {\r\n            Login: login,\r\n            Password: password\r\n        })\r\n        .toPromise();\r\n        \r\n        if(authRequest) {\r\n            authInfo = new AuthInfoModel(\r\n                authRequest.Id,\r\n                authRequest.Name,\r\n                authRequest.RoleId,\r\n                authRequest.RoleName,\r\n                authRequest.Token,\r\n                authRequest.IsActive\r\n            );\r\n            this._AuthInfo = authInfo;\r\n        }\r\n\r\n        this._isLoggedIn = !!authInfo;\r\n        console.log(\"Token\", authInfo.Token);\r\n        if(authInfo.Token)\r\n        {\r\n            this.authToken = authInfo.Token;\r\n            localStorage.setItem('Token', this.authToken);\r\n        }\r\n        this.AuthStatusChanged.emit(authInfo);\r\n\r\n        return authInfo;\r\n    }\r\n\r\n    async register(registerModel: RegisterModel): Promise<void> {\r\n        const request = await this.http.post<void>(\"/api/Auth/Register\", registerModel).toPromise();\r\n        console.log(\"Register request\", request);\r\n        return request;\r\n    }\r\n\r\n    getRolesForRegistration(): Observable<Role[]> {\r\n        return this.http.get<Role[]>('/Api/Auth/Roles');\r\n    } \r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n\r\nconst materialModules = [\r\n  CdkTreeModule,\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatProgressSpinnerModule,\r\n  MatPaginatorModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatFormFieldModule,\r\n  MatButtonToggleModule,\r\n  MatTreeModule,\r\n  OverlayModule,\r\n  PortalModule,\r\n  MatBadgeModule,\r\n  MatGridListModule,\r\n  MatRadioModule,\r\n  MatDatepickerModule,\r\n  MatTooltipModule\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ...materialModules\r\n  ],\r\n  exports: [\r\n    ...materialModules\r\n  ],\r\n})\r\n\r\nexport class AngularMaterialModule { }","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LogInComponent } from './auth/log-in/log-in.component';\r\nimport { RegisterComponent } from './auth/register/register.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { CreateTestComponent } from './test/createTest/createTest.component';\r\nimport { PassTestComponent } from './test/pass-test/pass-test.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n  { path: 'login', component: LogInComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'home', component: MainComponent },\r\n  { path: 'create', component: CreateTestComponent },\r\n  { path: 'pass', component: PassTestComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  createTest() {\r\n    this.router.navigate(['./create']);\r\n  }\r\n\r\n  passTest() {\r\n    this.router.navigate(['./pass']);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\" style=\"height:64px\"></div>\r\n    <div class=\"row\">\r\n        <div class=\"col\"></div>\r\n        <div class=\"col-md-10\">\r\n            <button mat-stroked-button color=\"accent\" class=\"btn-block\" (click)=\"createTest();\">Создать тест</button>\r\n            <button mat-stroked-button color=\"accent\" class=\"btn-block\" (click)=\"passTest();\">Пройти тест</button>\r\n        </div>\r\n        <div class=\"col\"></div>\r\n    </div>\r\n</div>\r\n","import { Answer } from \"./answer.model\";\r\n\r\nexport class Question {\r\n    Id: number;\r\n    Name: string;\r\n    Answers: Answer[];\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}