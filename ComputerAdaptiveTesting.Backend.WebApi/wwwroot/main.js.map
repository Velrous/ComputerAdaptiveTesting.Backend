{"version":3,"sources":["./src/app/auth/models/auth-info.model.ts","./src/app/auth/models/register.model.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/auth/log-in/log-in.component.html","./src/app/auth/log-in/log-in.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/auth.service.ts","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class AuthInfoModel {\r\n    public Id: number;\r\n    public Name: string;\r\n    public RoleId: number;\r\n    public RoleName: string;\r\n    public Token?: string;\r\n    public IsActive: boolean;\r\n\r\n    constructor (\r\n        id: number,\r\n        name: string,\r\n        roleId: number,\r\n        roleName: string,\r\n        token: string,\r\n        isActive: boolean\r\n    ) {\r\n        this.Id = id;\r\n        this.Name = name;\r\n        this.RoleId = roleId;\r\n        this.RoleName = roleName;\r\n        this.Token = token;\r\n        this.IsActive = isActive;\r\n    }\r\n}","export class RegisterModel {\r\n    public Id: number;\r\n    public Login: string;\r\n    public Password: string;\r\n    public Name: string;\r\n    public RoleId: number;\r\n    public IsActive: boolean;\r\n    public Email: string;\r\n\r\n    constructor (\r\n        id: number,\r\n        login: string,\r\n        password: string,\r\n        name: string,\r\n        roleId: number,\r\n        isActive: boolean,\r\n        email: string\r\n    ) {\r\n        this.Id = id;\r\n        this.Login = login;\r\n        this.Password = password;\r\n        this.Name = name;\r\n        this.RoleId = roleId;\r\n        this.IsActive = isActive;\r\n        this.Email = email;\r\n    }\r\n}","<div class=\"container\">\n    <div class=\"row\" style=\"height:64px\"></div>\n    <div class=\"row\">\n        <div class=\"col\"></div>\n        <div class=\"col-md-10\">\n            <button mat-stroked-button color=\"accent\" class=\"btn-block\" (click)=\"create();\">Создать тест</button>\n            <mat-card class=\"box\" *ngIf=\"isCreate\">\n                <mat-card-header>\n                  <mat-card-title>Создание теста</mat-card-title>\n                </mat-card-header>\n            \n                <form class=\"example-form\">\n                </form>\n              </mat-card>\n        </div>\n        <div class=\"col\"></div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  isCreate=false;\n\n  ngOnInit(): void {\n  }\n\n  create() {\n    this.isCreate=true;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n    <mat-card class=\"box\">\n      <mat-card-header>\n        <mat-card-title>Вход</mat-card-title>\n      </mat-card-header>\n  \n      <form class=\"example-form\">\n        <mat-card-content>\n          <mat-form-field class=\"example-full-width\">\n            <input matInput [(ngModel)]=\"info.login\" name=\"login\" placeholder=\"Имя пользователя\">\n          </mat-form-field>\n  \n          <mat-form-field class=\"example-full-width\">\n            <input matInput [(ngModel)]=\"info.password\" name=\"password\" type=\"password\" placeholder=\"Пароль\">\n          </mat-form-field>\n        </mat-card-content>\n        <div class=\"login-Error\"\n        *ngIf=\"hasError\">\n        Неверное имя пользователя или пароль\n      </div>\n        <button mat-stroked-button color=\"accent\" class=\"btn-block\" (click)=\"logIn();\">Войти</button>\n      </form>\n    </mat-card>\n  \n  </div>","import { Component, OnInit, Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-log-in',\n  templateUrl: './log-in.component.html',\n  styleUrls: ['./log-in.component.css']\n})\nexport class LogInComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  isLoading = false;\n  hasError = false;\n  info = {\n    login: \"\",\n    password: \"\"\n  };\n\n  async logIn() {\n    this.isLoading = true;\n    let authInfo = null;\n    try {\n      authInfo = await this.authService.logIn(this.info.login, this.info.password);\n      this.isLoading = false;\n    }\n    catch (e) {\n      console.error(e);\n      this.hasError = true;\n      this.isLoading = false;\n      return;\n    }\n\n    setTimeout(() => {\n      if(authInfo) {\n        if(this.authService.redirectUrl) {\n          this.router.navigate([this.authService.redirectUrl]);\n        } else {\n          this.router.navigate(['./home']);\n        }\n      }\n    }, 10);\n  }\n\n  ngOnInit() {\n    console.log(this.authService.isLoggedIn)\n    if(this.authService.isLoggedIn) {\n      this.router.navigate(['/']);\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cat-front';\n}\n","<!-- Toolbar -->\n<mat-toolbar color=\"primary\" class=\"app-header\">\n  <div><p>ComputerAdaptiveTesting</p></div>\n  <span class=\"nav-tool-items\">\n    <a mat-button routerLink=\"login\" routerLinkActive=\"active\">Войти</a>\n    <a mat-button mat-raised-button routerLink=\"register\" routerLinkActive=\"active\">Регистрация</a>\n  </span>\n</mat-toolbar>\n\n<router-outlet></router-outlet>","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LogInComponent } from './auth/log-in/log-in.component';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LogInComponent,\n    RegisterComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Role } from 'src/app/models/role.model';\nimport { AuthService } from '../auth.service';\nimport { RegisterModel } from '../models/register.model';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  roles: Role[];\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { \n    this.authService.getRolesForRegistration().subscribe((roles) => {\n      this.roles = roles.map(item => {\n        return {Id: item.Id, Name: item.Name};\n      });\n    });\n    console.log(\"roles\", this.roles);\n  }\n\n  isLoading = false;\n  hasError = false;\n  registerForm = null;\n  registrationModel = {\n    login: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    roleId: null\n  };\n\n  ngOnInit() {\n  }\n\n  register() {\n    if(this.registrationModel.password == this.registrationModel.confirmPassword)\n    {\n      let registerModel = new RegisterModel(\n        null,\n        this.registrationModel.login,\n        this.registrationModel.password,\n        null,\n        this.registrationModel.roleId,\n        true,\n        this.registrationModel.email\n      );\n      console.log(\"Register\", registerModel);\n      this.authService.register(registerModel);\n    }\n  }\n}\n","<div class=\"row w-100\" style=\"height:64px\"></div>\n<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <div class=\"col-4\"></div>\n  <div class=\"col-4\">\n    <mat-card class=\"container-fluid\">\n      <mat-card-header>\n        <mat-card-title>Регистрация</mat-card-title>\n      </mat-card-header>\n  \n      <form>\n  \n        <mat-card-content>\n          <mat-form-field class=\"w-100 form-group\">\n            <input class=\"h-100\" type=\"text\" name=\"login\" matInput required minlength=\"5\" placeholder=\"Имя пользователя\" \n             [(ngModel)]=\"registrationModel.login\" #login=\"ngModel\">\n          </mat-form-field>\n          <div class=\"alert alert-danger\" *ngIf=\"login.invalid && (login.dirty || login.touched)\">\n              <div *ngIf=\"login.errors?.required\">\n                Имя пользователя не введено\n              </div>\n              <div *ngIf=\"login.errors?.minlength\">\n                Имя пользователя должно быть не короче 5 символов\n              </div>\n          </div>\n  \n          <mat-form-field class=\"w-100\">\n            <input class=\"h-100\" type=\"email\" name=\"email\" matInput required placeholder=\"Email\" [(ngModel)]=\"registrationModel.email\" #email=\"ngModel\" ngModel email=\"true\">\n          </mat-form-field>\n          <div class=\"alert alert-danger\" *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n            <div *ngIf=\"email.errors?.required\">\n              Email не введен\n            </div>\n            <div *ngIf=\"email.invalid\">\n              Email не корректен\n            </div>\n          </div>\n\n          <mat-form-field class=\"w-100\">\n            <mat-label>Выберите роль...</mat-label>\n            <mat-select name=\"roleId\" [(ngModel)]=\"registrationModel.roleId\" #roleId=\"ngModel\" required>\n              <mat-option [value]=\"role.Id\" *ngFor=\"let role of roles\">{{role.Name}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <div class=\"alert alert-danger\" *ngIf=\"roleId.invalid && (roleId.dirty || roleId.touched)\">\n            Роль не выбрана\n          </div>\n  \n          <mat-form-field class=\"w-100\">\n            <input class=\"h-100\" type=\"password\" name=\"password\" matInput required placeholder=\"Пароль\" [(ngModel)]=\"registrationModel.password\" #password=\"ngModel\" ngModel password=\"true\">\n          </mat-form-field>\n\n          <mat-form-field class=\"w-100\">\n            <input class=\"h-100\" type=\"password\" name=\"confirmPassword\" matInput required placeholder=\"Подтверждение пароля\" [(ngModel)]=\"registrationModel.confirmPassword\" #confirmPassword=\"ngModel\" ngModel confirmPassword=\"true\">\n          </mat-form-field>\n  \n        </mat-card-content>\n  \n        <button mat-stroked-button color=\"accent\" class=\"btn-block\" (click)=\"register();\">Зарегистрироваться</button>\n  \n      </form>\n    </mat-card>\n  </div>\n  <div class=\"col-4\"></div>\n</div>\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { EventEmitter, Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Role } from \"../models/role.model\";\r\nimport { AuthInfoModel } from \"./models/auth-info.model\";\r\nimport { RegisterModel } from \"./models/register.model\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class AuthService { \r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    public AuthStatusChanged = new EventEmitter<AuthInfoModel>();\r\n    private _isLoggedIn = false;\r\n    private _AuthInfo: AuthInfoModel;\r\n\r\n    get isLoggedIn(): boolean {\r\n        return this._isLoggedIn;\r\n    }\r\n\r\n    get AuthInfo() {\r\n        return this._AuthInfo;\r\n    }\r\n\r\n    authToken?: string = '';\r\n    redirectUrl: string = '';\r\n\r\n    getAuthToken() {\r\n        return this.authToken || null;\r\n    }\r\n\r\n    async logIn(login: string, password: string): Promise<AuthInfoModel> {\r\n        let authInfo: AuthInfoModel = null;\r\n\r\n        const authRequest = await this.http.post<any>(\"/api/Auth/Login\", {\r\n            Login: login,\r\n            Password: password\r\n        })\r\n        .toPromise();\r\n        \r\n        if(authRequest) {\r\n            authInfo = new AuthInfoModel(\r\n                authRequest.Id,\r\n                authRequest.Name,\r\n                authRequest.RoleId,\r\n                authRequest.RoleName,\r\n                authRequest.Token,\r\n                authRequest.IsActive\r\n            );\r\n            this._AuthInfo = authInfo;\r\n        }\r\n\r\n        this._isLoggedIn = !!authInfo;\r\n        console.log(\"Token\", authInfo.Token);\r\n        if(authInfo.Token)\r\n        {\r\n            this.authToken = authInfo.Token;\r\n            localStorage.setItem('Token', this.authToken);\r\n        }\r\n        this.AuthStatusChanged.emit(authInfo);\r\n\r\n        return authInfo;\r\n    }\r\n\r\n    async register(registerModel: RegisterModel): Promise<void> {\r\n        const request = await this.http.post<void>(\"/api/Auth/Register\", registerModel).toPromise();\r\n        console.log(\"Register request\", request);\r\n        return request;\r\n    }\r\n\r\n    getRolesForRegistration(): Observable<Role[]> {\r\n        return this.http.get<Role[]>('/Api/Auth/Roles');\r\n    } \r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n\r\nconst materialModules = [\r\n  CdkTreeModule,\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatProgressSpinnerModule,\r\n  MatPaginatorModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatFormFieldModule,\r\n  MatButtonToggleModule,\r\n  MatTreeModule,\r\n  OverlayModule,\r\n  PortalModule,\r\n  MatBadgeModule,\r\n  MatGridListModule,\r\n  MatRadioModule,\r\n  MatDatepickerModule,\r\n  MatTooltipModule\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ...materialModules\r\n  ],\r\n  exports: [\r\n    ...materialModules\r\n  ],\r\n})\r\n\r\nexport class AngularMaterialModule { }","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LogInComponent } from './auth/log-in/log-in.component';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\n  { path: 'login', component: LogInComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'home', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}